from telegram import Update
from telegram.ext import ContextTypes, MessageHandler, filters, ConversationHandler, CommandHandler
from utils.states import NAME, PHONE, CAR_MODEL, BUDGET, COMMENT
from config import ADMIN_CHAT_ID
from keyboards.main_menu import get_main_keyboard


async def start_application(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üöó <b>–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ –æ—Ñ–æ—Ä–º–∏–º –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–¥–±–æ—Ä –∞–≤—Ç–æ</b>\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:\n\n"
        "‚ùå <i>–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç</i>",
        parse_mode='HTML',
        reply_markup=get_main_keyboard()
    )
    return NAME


async def process_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == '/cancel':
        return await cancel(update, context)

    context.user_data['name'] = update.message.text
    await update.message.reply_text(
        "üìû –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n\n"
        "‚ùå <i>–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel</i>",
        parse_mode='HTML'
    )
    return PHONE


async def process_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == '/cancel':
        return await cancel(update, context)

    context.user_data['phone'] = update.message.text
    await update.message.reply_text(
        "üîç –ö–∞–∫–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∏—â–µ—Ç–µ? (–ú–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å, –≥–æ–¥):\n\n"
        "‚ùå <i>–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel</i>",
        parse_mode='HTML'
    )
    return CAR_MODEL


async def process_car_model(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == '/cancel':
        return await cancel(update, context)

    context.user_data['car_model'] = update.message.text
    await update.message.reply_text(
        "üí∞ –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –±—é–¥–∂–µ—Ç (–≤ —Ä—É–±–ª—è—Ö):\n\n"
        "‚ùå <i>–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel</i>",
        parse_mode='HTML'
    )
    return BUDGET


async def process_budget(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == '/cancel':
        return await cancel(update, context)

    context.user_data['budget'] = update.message.text
    await update.message.reply_text(
        "üí¨ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:\n\n"
        "‚ùå <i>–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel</i>",
        parse_mode='HTML'
    )
    return COMMENT


async def process_comment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == '/cancel':
        return await cancel(update, context)

    context.user_data['comment'] = update.message.text

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞—è–≤–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    application_text = (
        "üöó <b>–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ü–û–î–ë–û–† –ê–í–¢–û</b>\n\n"
        f"üë§ <b>–ò–º—è:</b> {context.user_data['name']}\n"
        f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {context.user_data['phone']}\n"
        f"üîç <b>–ê–≤—Ç–æ–º–æ–±–∏–ª—å:</b> {context.user_data['car_model']}\n"
        f"üí∞ <b>–ë—é–¥–∂–µ—Ç:</b> {context.user_data['budget']} —Ä—É–±.\n"
        f"üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {context.user_data['comment']}\n\n"
        f"üÜî <b>User ID:</b> {update.message.from_user.id}\n"
        f"üë§ <b>Username:</b> @{update.message.from_user.username if update.message.from_user.username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω—É
    await context.bot.send_message(
        chat_id=ADMIN_CHAT_ID,
        text=application_text,
        parse_mode='HTML'
    )

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(
        "‚úÖ <b>–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!</b>\n\n"
        "–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.\n\n"
        "üöó –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        parse_mode='HTML',
        reply_markup=get_main_keyboard()
    )

    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    context.user_data.clear()
    return ConversationHandler.END


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.",
        reply_markup=get_main_keyboard()
    )
    context.user_data.clear()
    return ConversationHandler.END


def get_application_handlers():
    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–¥–±–æ—Ä$"), start_application)],
        states={
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, process_name)],
            PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, process_phone)],
            CAR_MODEL: [MessageHandler(filters.TEXT & ~filters.COMMAND, process_car_model)],
            BUDGET: [MessageHandler(filters.TEXT & ~filters.COMMAND, process_budget)],
            COMMENT: [MessageHandler(filters.TEXT & ~filters.COMMAND, process_comment)],
        },
        fallbacks=[CommandHandler('cancel', cancel)]
    )
    return [conv_handler]