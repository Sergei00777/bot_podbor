from telegram import Update
from telegram.ext import ContextTypes, MessageHandler, filters
from telegram.constants import ParseMode

# –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã
AI_KNOWLEDGE_BASE = {
    "–≥–æ—Ä–æ–¥": "–î–ª—è –≥–æ—Ä–æ–¥–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ —Ö—ç—Ç—á–±–µ–∫–∏: Hyundai Solaris, Kia Rio, Volkswagen Polo. –û–Ω–∏ –º–∞–Ω–µ–≤—Ä–µ–Ω–Ω—ã–µ, —ç–∫–æ–Ω–æ–º–∏—á–Ω—ã–µ –∏ —É–¥–æ–±–Ω—ã–µ –¥–ª—è –ø–∞—Ä–∫–æ–≤–∫–∏.",
    "–≤–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫": "–î–ª—è –≤–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫–æ–≤ —Å–º–æ—Ç—Ä–∏—Ç–µ Toyota RAV4, Hyundai Tucson, Kia Sportage. –ù–∞–¥–µ–∂–Ω—ã–µ, –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ –∏ —Å —Ö–æ—Ä–æ—à–µ–π –ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—Ç—å—é.",
    "–±—é–¥–∂–µ—Ç": "–í –±—é–¥–∂–µ—Ç–Ω–æ–º —Å–µ–≥–º–µ–Ω—Ç–µ –æ—Ç–ª–∏—á–Ω–æ —Å–µ–±—è –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç: Lada Vesta, Renault Logan, Hyundai Solaris. –ù–µ–¥–æ—Ä–æ–≥–∏–µ –≤ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ –∏ —Ä–µ–º–æ–Ω—Ç–µ.",
    "–Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å": "–°–∞–º—ã–µ –Ω–∞–¥–µ–∂–Ω—ã–µ –º–∞—Ä–∫–∏: Toyota, Honda, Mazda. –ò–∑ –∫–æ—Ä–µ–π—Å–∫–∏—Ö - Hyundai –∏ Kia. –ù–µ–º–µ—Ü–∫–∏–µ —Ç—Ä–µ–±—É—é—Ç –±–æ–ª—å—à–µ –≤–Ω–∏–º–∞–Ω–∏—è –∫ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é.",
    "–± —É": "–ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –±/—É –∞–≤—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏—Å—Ç–æ—Ä–∏—é, —Å–¥–µ–ª–∞–π—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É, –æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∫—É–∑–æ–≤ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –∫–æ—Ä—Ä–æ–∑–∏–∏, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã.",
    "–ø–æ–¥–±–æ—Ä": "–ù–∞—à —Å–µ—Ä–≤–∏—Å –ø–æ–¥–±–æ—Ä–∞ –≤–∫–ª—é—á–∞–µ—Ç: –ø–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É, —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏. –°—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç 10 000 —Ä—É–±.",
    "—Å—Ç–æ–∏–º–æ—Å—Ç—å": "–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–±–æ—Ä–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è - –æ—Ç 10 000 —Ä—É–±–ª–µ–π. –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–∏—Å–∫–∞ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥.",
    "–≥–∞—Ä–∞–Ω—Ç–∏—è": "–î–∞–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å - 14 –¥–Ω–µ–π –Ω–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é —á–∏—Å—Ç–æ—Ç—É –∏ 7 –¥–Ω–µ–π –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.",
}


async def handle_ai_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_question = update.message.text.lower()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π –º–µ–Ω—é
    menu_commands = ["–∫–∞—Ç–∞–ª–æ–≥ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π", "–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", "—á–µ–∫-–ª–∏—Å—Ç",
                     "ai –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç", "–æ –Ω–∞—Å", "—É—Å–ª—É–≥–∏ –∏ —Ü–µ–Ω—ã", "–∫–æ–Ω—Ç–∞–∫—Ç—ã", "—Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º"]

    if any(cmd in user_question for cmd in menu_commands):
        return  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É, —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –º–µ–Ω—é

    # –ü–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
    response = "ü§ñ <b>AI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:</b>\n\n"

    found_answer = False
    for keyword, answer in AI_KNOWLEDGE_BASE.items():
        if keyword in user_question:
            response += f"{answer}\n\n"
            found_answer = True

    if not found_answer:
        response += (
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –Ω–∞—à–µ–ª —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å.\n\n"
            "–†–µ–∫–æ–º–µ–Ω–¥—É—é:\n"
            "‚Ä¢ –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–¥–±–æ—Ä - –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–µ–µ\n"
            "‚Ä¢ –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n"
            "‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—à —á–µ–∫-–ª–∏—Å—Ç –æ—Å–º–æ—Ç—Ä–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π\n\n"
            "üí° <i>–Ø –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —É—á—É—Å—å –∏ —Å–∫–æ—Ä–æ —Å–º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –±–æ–ª—å—à–µ –≤–æ–ø—Ä–æ—Å–æ–≤!</i>"
        )
    else:
        response += "üí° <i>–ù—É–∂–Ω–∞ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è? –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º!</i>"

    await update.message.reply_text(
        text=response,
        parse_mode=ParseMode.HTML,
        disable_web_page_preview=True
    )


def get_ai_questions_handlers():
    return [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_ai_question)]